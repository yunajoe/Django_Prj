# Post model에 photo 필드 추가 

from django.db import models



class Post(models.Model):
     .....
    photo = models.ImageField(blank=True)  # 값을 비워둘수 있음 False가 default

-------------------------------------------------------------------------------

# pip install pillow 설치 
-------------------------------------------------------------------------------

# 프로젝트폴더(inflearn_Django)의 같은 위치에다가 
requiement.txt ( 설치할 것들)를 적어서 

 pip install -r requirements.txt

하면은 저절로 install 된다. 
-------------------------------------------------------------------------------
# migration해주기 
 python manage.py makemigrations
 python manage.py migrate
   
-------------------------------------------------------------------------------
# settings.py media url, media root 추가 


MEDIA_URL = "/image_media/"  # 파일 접근시 사용
MEDIA_ROOT = os.path.join(BASE_DIR, "media")  # 업로드떄 사용

cf. MEDIA_ROOT = os.path.join(BASE_DIR, "..", "public", "media")
--> base_dir 상위 폴더-> public폴더-> media폴더
-------------------------------------------------------------------------------

# 프로젝트 app의 urls.py


from xml.dom.minidom import Document
from django.contrib import admin
from django.urls import path, include
from django.conf import settings
from django.conf.urls.static import static

urlpatterns = [
    path('admin/', admin.site.urls),
    path("blog1/", include("blog1.urls")),
    path("instagram/", include("instagram.urls")),
]

if settings.DEBUG:  # 개발모드일때만 debug, 실제 서비스는 false
  urlpatterns += static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)
  
 -------------------------------------------------------------------------------
admin으로 가서 이미지 파일 업로드 주소를 보면은

>> http://127.0.0.1:8000/image_media/apple.jpg 


# admin계정에서 올린 이미지가 보이게 할려면은
instragram app 의 admin.py 

1. photo_tag 추가 
class PostAdmin(admin.ModelAdmin):
  
    list_display = ["id","message","message_length","photo_tag","is_publish","created_at","updated_at"]


2. photo_tag 함수 추가 

   def photo_tag(self, post):        
        if post.photo:
          #   return f"<img src={post.photo.url}>" 이미지 주소를 return 
          return mark_safe(f'<img src={post.photo.url} style= "width:50px;">')
        return None
      
  -------------------------------------------------------------------------------
 # 사진 저장 경로 다르게 해주기 
photo = models.ImageField(blank=True) 게 하면은
media 폴더 아래에 사진이 계속 쌓임
따라서 
    photo = models.ImageField(blank=True, upload_to="instgram/post/%Y/%m/%d")
변경해주면은, !
media 폴더 아래 instagram/post/날짜 폴더가 생기고 사진이 저장이 된다. 
-------------------------------------------------------------------------------
# django shell를 이용하여 필드 살펴보기 

 python manage.py shell

>>> from instagram.models import Post
>>> Post.objects.all()
-------------------------------------------------------------------------------
# 사진이 있는 object 보기 
>>> Post.objects.get(pk=4)
<Post: 하하하핳>
>>> Post.objects.get(pk=4).photo
'C:\\Django_Project\\inflearn_django\\media\\instgram\\post\\2022\\06\\25\\snowman.PNG'

# 사진이 없는 object 보기 
>>> Post.objects.get(pk=1).photo
<ImageFieldFile: None>

>>> Post.objects.get(pk=1).photo.path
ValueError: The 'photo' attribute has no file associated with it.
        
